{"version":3,"sources":["Pages/Home.jsx","Pages/PlayList.jsx","Pages/Favourites.jsx","Pages/PlayDetails.jsx","Routes/Routes.jsx","App.js","reportWebVitals.js","index.js"],"names":["Home","navigate","useNavigate","useState","setIsloaded","playsList","setPlaysList","useEffect","fetch","then","response","json","data","localStorage","setItem","JSON","stringify","justify","align","span","id","name","className","onFinish","value","FilteredData","title","titleData","filter","plays","includes","console","log","push","Item","placeholder","type","htmlType","offset","to","Header","Layout","Content","Option","Select","PlaysList","isLoaded","parse","getItem","allplaysList","setAllplaysList","favouriteList","setFavouriteList","Form","useForm","form","show","setShow","columns","href","onclick","sort","a","b","dataIndex","key","render","text","row","index","icon","HeartTwoTone","onClick","prevArray","markToFavourite","onViewDetails","favouritesColumns","DeleteTwoTone","unmarkToFavourite","style","position","zIndex","width","theme","mode","defaultSelectedKeys","padding","marginTop","class","minHeight","pagination","dataSource","layout","labelCol","wrapperCol","play","before","after","genreData","likelyDate","genre","label","gutter","resetFields","Favourites","TabPane","Tabs","PlayDetails","useParams","playDescrip","setPlayDescrip","playDetails","handleClose","onHide","backdrop","keyboard","closeButton","Title","Body","Footer","variant","src","alt","message","description","defaultActiveKey","onChange","tab","wiki","shakespeareOrg","synopsis","gutenberg","persona","renderItem","item","extra","desc","player","acts","map","act","scenes","scene","stageDirection","speeches","speech","speaker","lines","line","Routings","path","element","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9dd11487.chunk.js","sourcesContent":["import React,  { useEffect, useState } from 'react'\nimport { Link } from \"react-router-dom\"\nimport { Form, Input, Button, Row, Col } from 'antd';\nimport { useNavigate } from \"react-router-dom\";\n<link rel=\"stylesheet\" href=\"index.css\"></link>\n\nexport const Home = () => {\n    const navigate = useNavigate();\n    const [isLoaded, setIsloaded] = useState(false);\n    const [playsList, setPlaysList] = useState([]);\n\n   useEffect(() => {\n        fetch('https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/list.php')\n        .then(response => response.json())\n            .then(data => { localStorage.setItem('playsList', JSON.stringify(data))\n            setPlaysList(data)\n        })\n        setIsloaded(true);\n    }, [])\n\n\n\n    const onFinish = (value) => {\n        let FilteredData = [];\n        if(value.title){\n            let titleData = playsList.filter(plays => plays.title.includes(value.title));\n            console.log(titleData);\n            FilteredData.push(...titleData);\n        }\n        localStorage.setItem('playsList', JSON.stringify(FilteredData));\n        navigate(\"/play-list\");\n    }\n    return (\n        <div>\n            <Row justify=\"space-around\" align=\"middle\">\n                <Col span={12}>\n                    <h1 id=\"mainHeader\">Play Browser</h1>\n                    <Form\n                        name=\"normal_login\"\n                        className=\"login-form\"\n                        onFinish={onFinish}\n                    >\n                        <Form.Item\n                            name=\"title\"\n                        >\n                            <Input placeholder=\"Title\" />\n                        </Form.Item>\n                        <Form.Item>\n                            <Row justify=\"space-around\">\n                                <Col span={8}>\n                                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                                        Show Matching Plays\n                                    </Button>\n                                </Col>\n                                <Col span={8} offset={8}>\n                                    <Link to={\"/play-list\"}><Button type=\"primary\" htmlType=\"button\" className=\"login-form-button\">\n                                        Show All Plays\n                                    </Button></Link>\n                                </Col>\n                            </Row>\n                        </Form.Item>\n                    </Form>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { Menu, Layout, Table, Button, Row, Col, Form, Input, Card, Select } from 'antd';\nimport {\n    HeartTwoTone,\n    DeleteTwoTone\n} from '@ant-design/icons';\nimport { List } from 'rc-field-form';\nconst { Header, Content } = Layout;\nconst { Option } = Select;\n<link rel=\"stylesheet\" href=\"index.css\"></link>\nexport const PlaysList = () => {\n    const navigate = useNavigate();\n    const [isLoaded, setIsloaded] = useState(false);\n    const [playsList, setPlaysList] = useState(JSON.parse(localStorage.getItem(\"playsList\")));\n    const [allplaysList, setAllplaysList] = useState(JSON.parse(localStorage.getItem(\"playsList\")));\n    const [favouriteList, setFavouriteList] = useState([]);\n    const [form] = Form.useForm();\n    const [show, setShow] = useState(true);\n\n\n    useEffect(() => {\n        if (!playsList) {\n            fetch('https://randyconnolly.com/funwebdev/3rd/api/shakespeare/list.php')\n                .then(response => response.json())\n                .then(data => {\n                    localStorage.setItem('playsList', JSON.stringify(data))\n                    setPlaysList(data)\n                    setAllplaysList(data)\n                })\n        }\n        setIsloaded(true);\n    }, [playsList])\n\n\n    const markToFavourite = (row) => {\n        setFavouriteList(prevArray => [...prevArray, row]);\n        setPlaysList(playsList.filter(plays => plays.id !== row.id));\n    }\n\n    const unmarkToFavourite = (row) => {\n        setPlaysList(prevArray => [row, ...prevArray]);\n        setFavouriteList(favouriteList.filter(plays => plays.id !== row.id));\n    }\n    const onViewDetails = (row) => {\n        localStorage.setItem(\"playDetails\", JSON.stringify(row));\n        navigate(\"/play-details/\" + row.id);\n    }\n    const columns = [\n        {\n            title: <a id=\"title\" href=\"#\" onclick={playsList.sort((a, b) => (a.title > b.title) ? 1 : -1)}>Title</a>,\n            dataIndex: 'title',\n            key: 'title',\n        },\n        {\n            title: <a id=\"year\" href=\"#\">Year</a>,\n            dataIndex: 'likelyDate',\n        },\n        {\n            title: '',\n            dataIndex: 'address',\n            render: (text, row, index) => {\n                return <div>\n                    <Button type=\"primary\" icon={<HeartTwoTone />} onClick={() => markToFavourite(row)} />\n                    <Button onClick={() => onViewDetails(row)}> View </Button>\n                </div>\n            },\n        },\n    ];\n    const favouritesColumns = [\n        {\n            title: 'Title',\n            dataIndex: 'title',\n            key: 'title',\n        },\n        {\n            title: 'Year',\n            dataIndex: 'likelyDate',\n        },\n        {\n            title: '',\n            dataIndex: 'address',\n            render: (text, row, index) => {\n\n                return <div>\n                    <Button type=\"primary\" icon={<DeleteTwoTone />} onClick={() => unmarkToFavourite(row)} />\n                </div>\n\n            },\n        },\n    ];\n\n    const onFilter = (value) => {\n        console.log(value)\n        let FilteredData = [];\n        if (value.title) {\n            let titleData = allplaysList.filter(play => play.title.includes(value.title));\n            console.log(titleData);\n            FilteredData.push(titleData);\n        }\n        if (value.before && value.after) {\n            let genreData = allplaysList.filter(play => +play.likelyDate < +value.before && +play.likelyDate > +value.after);\n            console.log(genreData)\n            FilteredData.push(...genreData);\n        }\n        if (value.after && !value.before) {\n            let genreData = allplaysList.filter(play => +play.likelyDate > +value.after);\n            console.log(genreData)\n            FilteredData.push(...genreData);\n        }\n        if (!value.after && value.before) {\n            let genreData = allplaysList.filter(play => +play.likelyDate < +value.before);\n            console.log(genreData)\n            FilteredData.push(...genreData);\n        }\n        if (value.genre) {\n            let genreData = allplaysList.filter(play => play.genre === value.genre);\n            console.log(genreData)\n            FilteredData.push(...genreData);\n        }\n        //names.filter(name => name.includes('J'))\n        console.log(FilteredData)\n        setPlaysList(FilteredData)\n    }\n\n\n    return (\n        <div>\n            <Layout>\n                <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\n                    <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n                        <Menu.Item key=\"1\"><Link to=\"/\">Logo</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"2\">About</Menu.Item>\n                    </Menu>\n                </Header>\n                <Content className=\"site-layout\" style={{ padding: '0 50px', marginTop: 64 }}>\n                    <Row>\n                        <Col span={8}>\n                        <button class=\"btn-minimize\" onClick={()=>setShow(!show)}></button>\n                            {show?<div id=\"fav\" className=\"site-layout-background\" style={{ padding: 24, minHeight: 380 }} >\n                                <h1>Favourites</h1>\n                                {isLoaded ? <Table pagination={false} dataSource={favouriteList} columns={favouritesColumns} /> : null}\n                            </div>:null}\n                        </Col>\n                        <Col span={8}>\n                            <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 380 }}>\n                                <h1>Play Filters</h1>\n                                <Card>\n                                    <Form\n                                        layout={{\n                                            labelCol: { span: 4 },\n                                            wrapperCol: { span: 14 },\n                                        }}\n                                        onFinish={onFilter}\n                                        form={form}\n                                    >\n                                        <Form.Item name=\"title\" label=\"Title\">\n                                            <Input placeholder=\"\" />\n                                        </Form.Item>\n                                        <Form.Item label=\"Year\">\n                                            <Row gutter={8}>\n                                                <Col span={24}>\n                                                    <Form.Item\n                                                        name=\"before\"\n                                                        label=\"Before\"\n                                                    >\n                                                        <Input />\n                                                    </Form.Item>\n                                                </Col>\n                                                <Col span={24}>\n                                                    <Form.Item\n                                                        name=\"after\"\n                                                        label=\"After\"\n                                                    >\n                                                        <Input />\n                                                    </Form.Item>\n                                                </Col>\n                                            </Row>\n                                        </Form.Item>\n                                        <Form.Item name=\"genre\" label=\"Genre\">\n                                            <Select>\n                                                <Option value=\"comedy\">Comedy</Option>\n                                                <Option value=\"tragedy\">Tragedy</Option>\n                                                <Option value=\"history\">History</Option>\n                                            </Select>\n                                        </Form.Item>\n                                        <Form.Item layout={{\n                                            wrapperCol: { offset: 8, span: 16 },\n                                        }}>\n                                            <Button type=\"primary\" htmlType=\"submit\">Filter</Button>\n                                            <Button htmlType=\"button\" onClick={() => {\n                                                form.resetFields();\n                                            }}>\n                                                Clear\n                                            </Button>\n                                        </Form.Item>\n                                    </Form>\n                                </Card>\n                            </div>\n                        </Col>\n                        <Col span={8}> <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 380 }}>\n                            <h1>List / Matches</h1>\n                            {isLoaded ? <Table pagination={false} dataSource={playsList} columns={columns} /> : null}\n                        </div></Col>\n                    </Row>\n                </Content>\n            </Layout>\n        </div>\n    )\n}\n","import React from 'react'\n\n\nexport function Favourites() {\n    return (\n        <div >\n            <h1>Favourites</h1>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Link, useParams } from 'react-router-dom'\nimport { Menu, Layout, Empty, Button, Row, Col, Form, List, Card, Select, Tabs } from 'antd';\nimport Modal from 'react-modal';\nimport {\n    HeartTwoTone,\n    DeleteTwoTone\n} from '@ant-design/icons';\nconst { Header, Content } = Layout;\nconst { Option } = Select;\nconst { TabPane } = Tabs;\nexport const PlayDetails = () => {\n    const { id } = useParams();\n    const [isLoaded, setIsloaded] = useState(false);\n    const [playDescrip, setPlayDescrip] = useState(false);\n    const playDetails = JSON.parse(localStorage.getItem(\"playDetails\"));\n    useEffect(() => {\n        fetch('https://randyconnolly.com/funwebdev/3rd/api/shakespeare/play.php?name=' + id)\n            .then(response => response.json())\n            .then(data => {\n                setPlayDescrip(data);\n                setIsloaded(true);\n            })\n    }, [id])\n\n    const [show, setShow] = useState(true);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => { setShow(true); }\n\n\n    const onTabChange = () => {\n\n    }\n\n\n    return (\n        <div>\n            <div>\n                <Modal\n                    show={show}\n                    onHide={handleClose}\n                    backdrop=\"static\"\n                    keyboard={false}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title>Modal title</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        I will not close if you click outside me. Don't even try to press\n                        escape key.\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n                        <Button variant=\"primary\">Understood</Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n            <Layout>\n                <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\n                    <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n                        <Menu.Item key=\"1\">\n                            <Link to=\"/\"><img src=\"../logo192.png\" alt=\"home\" /></Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"2\">\n                            <Link to={handleShow}>About</Link>\n                        </Menu.Item>\n                    </Menu>\n                </Header>\n                <Content className=\"site-layout\" style={{ padding: '0 50px', marginTop: 64 }}>\n                    {playDescrip.message ?\n                        <Row>\n                            <Col span={24}>\n                                <Card>\n                                    <Empty description={playDescrip.message} />\n                                </Card>\n                            </Col>\n                        </Row> :\n                        <Row gutter={8}>\n                            <Col span={8}>\n                                <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 380 }}>\n                                    <Card>\n                                        <h1>{playDescrip.title}</h1>\n                                        <Form>\n                                            <Form.Item>\n                                                <Select value=\"1\">\n                                                    <Option value=\"1\" >ACT 1</Option>\n                                                </Select>\n                                            </Form.Item>\n                                            <Form.Item>\n                                                <Select value=\"1\">\n                                                    <Option value=\"1\">SCENE 1</Option>\n                                                </Select>\n                                            </Form.Item>\n                                            <Form.Item>\n                                                <Select value=\"1\">\n                                                    <Option value=\"1\"></Option>\n                                                </Select>\n                                            </Form.Item>\n                                        </Form>\n                                    </Card>\n                                </div>\n                            </Col>\n                            <Col span={16}>\n                                <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 380 }}>\n                                    <Card>\n                                        <Tabs defaultActiveKey=\"1\" onChange={onTabChange}>\n                                            <TabPane tab=\"Details\" key=\"1\">\n                                                <p>{playDetails.title}</p>\n                                                <p>Genre: {playDetails.genre}</p>\n                                                <p>Wiki: {playDetails.wiki}</p>\n                                                <p>Shakespear Org: {playDetails.shakespeareOrg}</p>\n                                                <p>Synopsis: {playDetails.synopsis}</p>\n                                                <p>gutenberg: {playDetails.gutenberg}</p>\n                                            </TabPane>\n                                            <TabPane tab=\"Characters\" key=\"2\">\n                                                <List dataSource={playDescrip.persona} renderItem={item => (\n                                                    <><List.Item extra={<p>{item.desc}</p>}>\n                                                        {item.player}\n                                                    </List.Item>\n                                                    </>\n                                                )}>\n                                                </List>\n                                            </TabPane>\n                                            <TabPane tab=\"Text\" key=\"3\">\n                                                <h1>{playDescrip.title}</h1>\n                                                {playDescrip?.acts?.map((act, index) => {\n                                                    return (\n                                                        <>\n                                                            <h2>{act.name}</h2>\n                                                            {act.scenes?.map((scene, index) => {\n                                                                return (<><h3>{scene.name}</h3>\n                                                                    <hr />\n                                                                    <p><b>{scene.title}</b></p>\n                                                                    <p>{scene.stageDirection}</p>\n                                                                    {scene.speeches?.map((speech, index) => {\n                                                                        return (<>\n                                                                            <h3><b>{speech.speaker}</b></h3>\n                                                                            {speech.lines?.map((line, index) => {\n                                                                                return <p>{line}</p>\n                                                                            })}\n                                                                        </>\n                                                                        )\n                                                                    })}\n                                                                </>)\n                                                            })}\n                                                        </>\n                                                    )\n                                                })}\n                                            </TabPane>\n                                        </Tabs>\n                                    </Card>\n                                </div>\n                            </Col>\n                        </Row>\n                    }</Content>\n            </Layout>\n        </div>\n    )\n}\n","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Routes, Route\n} from \"react-router-dom\";\nimport { Home } from \"../Pages/Home\";\nimport { Empty } from 'antd';\nimport { PlaysList } from \"../Pages/PlayList\";\nimport { Favourites } from \"../Pages/Favourites\";\nimport { PlayDetails } from \"../Pages/PlayDetails\";\n\nexport function Routings() {\n    return (\n        <div>\n            <Router>\n                <Routes>\n                    <Route path='/' element={<Home/>}></Route>\n                    <Route path='/play-list' element={<PlaysList/>}></Route>\n                    <Route path='/play-details/:id' element={<PlayDetails/>}></Route>\n                    <Route path='/favourites' element={<Favourites/>}></Route>\n                    <Route path=\"*\" element={<Empty/>}/>\n                </Routes>\n            </Router>\n        </div>\n    );\n}\n","import './App.css';\nimport { Routings } from './Routes/Routes';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Routings/>\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n  \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}